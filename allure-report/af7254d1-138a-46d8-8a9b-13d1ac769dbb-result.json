{"name": "Test to verify that user can configure number parameter with resource type validation with halt parameter exception workflow enabled", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_number_parameter_exception_management.TestNumberParameterExceptionManagement object at 0x7af822723c50>\n\n    @allure.title(\n        \"Test to verify that user can configure number parameter with resource type validation with halt parameter \"\n        \"exception workflow enabled\")\n    @allure.description(\n        \"This testcase tests adding number parameter with resource type validation with halt parameter exception \"\n        \"workflow \")\n    @allure.link(\"https://app.clickup.com/t/86cvd7f26\")\n    @pytest.mark.scenario\n    @pytest.mark.create_prototype\n    @pytest.mark.exception_management_workflow\n    @pytest.mark.add_number_parameter_with_resource_type_validation_halt_parameter_exception_workflow\n    def test_add_number_parameter_with_resource_type_validation_halt_parameter_exception_workflow(self):\n        properties = object_type_with_properties.test_create_object_type_properties()\n        checklist_name_01 = self.test_add_number_parameter_with_resource_type_validation_halt_parameter_exception_workflow.__name__\n        login(Env.get_env_data(\"QA_ADMIN_USERNAME_01\"), Env.get_env_data(\"QA_ADMIN_PASSWORD_01\"))\n        select_facility(const.FACILITY_NAME)\n        select_usecase(const.USECASE_NAME)\n    \n        create_new_checklist(checklist_name_01, const.USECASE_ID, const.FACILITY_ID)\n        add_stage(stage_name_01)\n        add_task(stage_name_01, task_name_01)\n    \n        single_resource_param = get_parameter_data(\"single_resource\")\n        add_single_resource_selector_parameter(stage_name_01, task_name_01, single_resource_param,\n                                               properties[\"display_name\"])\n    \n        number_param = get_parameter_data(\"number\")\n        number_param_error = \"error- validation added on number parameter failed\"\n        add_number_parameter(stage_name_01, task_name_01, number_param,\n                             validations=[\n                                 {\"Validation_type\": \"resource\", \"parameter\": single_resource_param[\"label\"],\n                                  \"object_property\": properties[\"number_property\"],\n                                  \"constraint\": \"EQ\",\n                                  \"error\": number_param_error}], enable_exception_approval=\"DEFAULT_FLOW\")\n    \n>       validate_checklist()\n\ntests/scenarios/test_number_parameter_exception_management.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/unit/prototyping/process.py:186: in validate_checklist\n    status_200(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, message = ''\n\n    def status_200(response, message=None):\n        if message is None:\n            message = response.text\n>       assert response.status_code == 200, message\nE       AssertionError\n\nutil/validate_response.py:4: AssertionError"}, "description": "This testcase tests adding number parameter with resource type validation with halt parameter exception workflow ", "start": 1733492198723, "stop": 1733492205259, "uuid": "efaa5d91-0f1d-4c28-a678-8cd4d2ee9942", "historyId": "e005fd96606ea438f89126c1c3c7a83f", "testCaseId": "6b8ef6c7d43e6d593d55ffe4759195ce", "fullName": "tests.scenarios.test_number_parameter_exception_management.TestNumberParameterExceptionManagement#test_add_number_parameter_with_resource_type_validation_halt_parameter_exception_workflow", "labels": [{"name": "tag", "value": "add_number_parameter_with_resource_type_validation_halt_parameter_exception_workflow"}, {"name": "tag", "value": "exception_management_workflow"}, {"name": "tag", "value": "create_prototype"}, {"name": "tag", "value": "scenario"}, {"name": "parentSuite", "value": "tests.scenarios"}, {"name": "suite", "value": "test_number_parameter_exception_management"}, {"name": "subSuite", "value": "TestNumberParameterExceptionManagement"}, {"name": "host", "value": "ubuntu"}, {"name": "thread", "value": "29333-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.scenarios.test_number_parameter_exception_management"}], "links": [{"type": "link", "url": "https://app.clickup.com/t/86cvd7f26", "name": "https://app.clickup.com/t/86cvd7f26"}]}