{"name": "Test to verify that the Create Object Task Actions works as expected at the completion of the task", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_task_automation_actions.TestTaskAutomationActions object at 0x7b6d60bdaea0>, user_group_creation = 'Auto_Test_user_group_TestTaskAutomationActions_1376', job_execution_by = 'user_group', users_list = []\n\n    @allure.title(\n        \"Test to verify that the Create Object Task Actions works as expected at the completion of the task\")\n    @allure.description(\n        \"This testcase tests that if the Create Object Task Actions gets triggered at the completion of the task \"\n        \"during job execution\")\n    @allure.link(\"https://app.clickup.com/t/86cukbx0u\")\n    @pytest.mark.scenario\n    @pytest.mark.job\n    @pytest.mark.create_object_task_action_triggered_at_completion_of_task\n    @pytest.mark.parametrize(\"job_execution_by, users_list\", [(\"user\", [Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\")]),\n                                                              (\"user_group\", [])])\n    def test_create_object_task_action_triggered_at_completion_of_task(self, user_group_creation, job_execution_by,\n                                                                       users_list):\n        process_data = self.process_obj.test_add_create_object_action_type_at_completion_of_task()\n        object_data, display_name = object_type_objects.test_create_objects(\n            {process_data[\"properties\"][\"title_display_name\"]: \"object-02\",\n             process_data[\"properties\"][\"single_line_property\"]: \"single_line\",\n             process_data[\"properties\"][\"multi_line_property\"]: \"multi_line\",\n             process_data[\"properties\"][\"number_property\"]: \"02\",\n             process_data[\"properties\"][\"multi_select_property\"]: [\n                 process_data[\"properties\"][\"multi_select_option\"]],\n             process_data[\"properties\"][\"single_select_property\"]: process_data[\"properties\"][\n                 \"single_select_option\"],\n             process_data[\"properties\"][\"date_property\"]: \"12-12-2012\",\n             process_data[\"properties\"][\"date_time_property\"]: datetime.now().strftime(\"%d-%m-%Y %H:%M\")},\n            process_data[\"properties\"][\"display_name\"])\n        login(Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\"), Env.get_env_data(\"QA_PUBLISHER_PASSWORD_01\"))\n        select_facility(const.FACILITY_NAME)\n        select_usecase(const.USECASE_NAME)\n        self.job_obj.assign_user_and_user_group_to_process(job_execution_by, users_list, user_group_creation,\n                                                           all_task_assignmnet=True)\n        self.job_obj.create_job()\n    \n        self.job_obj.start_job()\n        self.job_obj.start_task(task_name_01)\n        self.job_obj.execute_parameter(task_name_01, process_data[\"res_param\"],\n                                       data={\"value\": object_data[\"displayName\"]})\n>       self.job_obj.complete_task(task_name_01,\n                                   create_object_data={process_data[\"properties\"][\"title_display_name\"]: \"object_01\",\n                                                       process_data[\"properties\"][\n                                                           \"single_line_property\"]: \"single_line\",\n                                                       process_data[\"properties\"][\"multi_line_property\"]: \"multi_line\",\n                                                       process_data[\"properties\"][\"number_property\"]: \"01\",\n                                                       process_data[\"properties\"][\"multi_select_property\"]: [\n                                                           process_data[\"properties\"][\"multi_select_option\"]],\n                                                       process_data[\"properties\"][\"single_select_property\"]:\n                                                           process_data[\"properties\"][\n                                                               \"single_select_option\"],\n                                                       process_data[\"properties\"][\"date_property\"]: \"12-12-2012\",\n                                                       process_data[\"properties\"][\n                                                           \"date_time_property\"]: datetime.now().strftime(\n                                                           \"%d-%m-%Y %H:%M\")},\n                                   action_type=Action_type.CREATE_OBJECT.value)\n\ntests/scenarios/job/test_task_automation_actions.py:1503: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/unit/execution/jobs.py:679: in complete_task\n    status_200(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, message = ''\n\n    def status_200(response, message=None):\n        if message is None:\n            message = response.text\n>       assert response.status_code == 200, message\nE       AssertionError\n\nutil/validate_response.py:4: AssertionError"}, "description": "This testcase tests that if the Create Object Task Actions gets triggered at the completion of the task during job execution", "parameters": [{"name": "job_execution_by", "value": "'user_group'"}, {"name": "users_list", "value": "[]"}], "start": 1733766442287, "stop": 1733766460078, "uuid": "798c15ef-38b2-4a94-bc56-687f167d6879", "historyId": "8f30d0d66c49a974e13345d037876bf0", "testCaseId": "d91c1d1b41a4f77f9d64bb7f357a48f0", "fullName": "tests.scenarios.job.test_task_automation_actions.TestTaskAutomationActions#test_create_object_task_action_triggered_at_completion_of_task", "labels": [{"name": "tag", "value": "create_object_task_action_triggered_at_completion_of_task"}, {"name": "tag", "value": "job"}, {"name": "tag", "value": "scenario"}, {"name": "parentSuite", "value": "tests.scenarios.job"}, {"name": "suite", "value": "test_task_automation_actions"}, {"name": "subSuite", "value": "TestTaskAutomationActions"}, {"name": "host", "value": "ubuntu"}, {"name": "thread", "value": "53959-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.scenarios.job.test_task_automation_actions"}], "links": [{"type": "link", "url": "https://app.clickup.com/t/86cukbx0u", "name": "https://app.clickup.com/t/86cukbx0u"}]}