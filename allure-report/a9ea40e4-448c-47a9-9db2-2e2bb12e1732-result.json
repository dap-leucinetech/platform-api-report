{"name": "Test user can complete a job for a process with interlocks having date property and task start trigger", "status": "failed", "statusDetails": {"message": "AssertionError: {\"timestamp\":1733497334,\"object\":\"LIST\",\"status\":\"ERROR\",\"message\":\"error\",\"errors\":[{\"id\":\"87992fb3-bb93-419b-92bc-07ee884afafb\",\"userId\":null,\"userGroupId\":null,\"type\":\"bad.request\",\"code\":\"E2309\",\"message\":\"Error- Configured condition failed for single_resource-2\",\"errorInfo\":null}]}", "trace": "self = <test_interlocks_execution.TestInterlocksExecution object at 0x7af8222ada60>, user_group_creation = 'Auto_Test_user_group_TestInterlocksExecution_1661', job_execution_by = 'user_group', users_list = []\n\n    @allure.title(\n        \"Test user can complete a job for a process with interlocks having date property and task \"\n        \"start trigger\")\n    @allure.description(\n        \"This testcases test that a user can complete a job for a process having interlocks with date property and \"\n        \"task start trigger\")\n    @allure.link(\"https://app.clickup.com/t/86cur1x7t\")\n    @pytest.mark.scenario\n    @pytest.mark.job\n    @pytest.mark.interlocks\n    @pytest.mark.complete_job_for_process_having_interlocks_with_date_property_and_task_start_trigger\n    @pytest.mark.parametrize(\"job_execution_by, users_list\",\n                             [(\"user\", [Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\")]), (\"user_group\", [])])\n    def test_complete_job_for_process_having_interlocks_with_date_property_and_task_start_trigger(self,\n                                                                                                  user_group_creation,\n                                                                                                  job_execution_by,\n                                                                                                  users_list):\n        process_data = self.process_obj.test_adding_interlocks_on_date_object_property_with_trigger_set_at_the_start_of_task()\n        object_data_01, display_name = object_type_objects.test_create_objects(\n            {process_data[\"properties\"][\"title_display_name\"]: \"object_01\",\n             process_data[\"properties\"][\"single_line_property\"]: \"single_line\",\n             process_data[\"properties\"][\"multi_line_property\"]: \"multi_line\",\n             process_data[\"properties\"][\"number_property\"]: \"100\",\n             process_data[\"properties\"][\"multi_select_property\"]: [\n                 process_data[\"properties\"][\"multi_select_option\"]],\n             process_data[\"properties\"][\"single_select_property\"]: process_data[\"properties\"][\n                 \"single_select_option\"],\n             process_data[\"properties\"][\"date_property\"]: ((datetime.now().date()) + timedelta(days=2)).strftime(\n                 \"%d-%m-%Y\")},\n            process_data[\"properties\"][\"display_name\"])\n    \n        object_data_02, display_name = object_type_objects.test_create_objects(\n            {process_data[\"properties\"][\"title_display_name\"]: \"object_02\",\n             process_data[\"properties\"][\"single_line_property\"]: \"single_line\",\n             process_data[\"properties\"][\"multi_line_property\"]: \"multi_line\",\n             process_data[\"properties\"][\"number_property\"]: \"100\",\n             process_data[\"properties\"][\"multi_select_property\"]: [\n                 process_data[\"properties\"][\"multi_select_option\"]],\n             process_data[\"properties\"][\"single_select_property\"]: process_data[\"properties\"][\n                 \"single_select_option\"],\n             process_data[\"properties\"][\"date_property\"]: ((datetime.now().date()) + timedelta(days=10)).strftime(\n                 \"%d-%m-%Y\")},\n            process_data[\"properties\"][\"display_name\"])\n    \n        login(Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\"), Env.get_env_data(\"QA_PUBLISHER_PASSWORD_01\"))\n        select_facility(const.FACILITY_NAME)\n        select_usecase(const.USECASE_NAME)\n        self.job_obj.assign_user_and_user_group_to_process(job_execution_by, users_list, user_group_creation,\n                                                           all_task_assignmnet=True)\n        self.job_obj.create_job()\n    \n        self.job_obj.start_job()\n        self.job_obj.start_task(task_name_01)\n        self.job_obj.execute_parameter(task_name_01, process_data[\"res_param_01\"],\n                                       data={\"value\": object_data_01[\"displayName\"]})\n        self.job_obj.complete_task(task_name_01)\n        self.job_obj.start_task(task_name_02)\n        self.job_obj.execute_parameter(task_name_02, process_data[\"res_param_02\"],\n                                       data={\"value\": object_data_02[\"displayName\"]})\n        self.job_obj.complete_task(task_name_02)\n>       self.job_obj.start_task(task_name_03)\n\ntests/scenarios/job/test_interlocks_execution.py:748: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/unit/execution/jobs.py:352: in start_task\n    status_200(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>\nmessage = '{\"timestamp\":1733497334,\"object\":\"LIST\",\"status\":\"ERROR\",\"message\":\"error\",\"errors\":[{\"id\":\"87992fb3-bb93-419b-92bc-0...:\"bad.request\",\"code\":\"E2309\",\"message\":\"Error- Configured condition failed for single_resource-2\",\"errorInfo\":null}]}'\n\n    def status_200(response, message=None):\n        if message is None:\n            message = response.text\n>       assert response.status_code == 200, message\nE       AssertionError: {\"timestamp\":1733497334,\"object\":\"LIST\",\"status\":\"ERROR\",\"message\":\"error\",\"errors\":[{\"id\":\"87992fb3-bb93-419b-92bc-07ee884afafb\",\"userId\":null,\"userGroupId\":null,\"type\":\"bad.request\",\"code\":\"E2309\",\"message\":\"Error- Configured condition failed for single_resource-2\",\"errorInfo\":null}]}\n\nutil/validate_response.py:4: AssertionError"}, "description": "This testcases test that a user can complete a job for a process having interlocks with date property and task start trigger", "parameters": [{"name": "job_execution_by", "value": "'user_group'"}, {"name": "users_list", "value": "[]"}], "start": 1733497309667, "stop": 1733497334562, "uuid": "ad330956-389a-48b6-a59d-227910b583ce", "historyId": "2c1abac8896e4c178a91b0ca8d14287e", "testCaseId": "f3c33020bffe545673eee79b0871e43f", "fullName": "tests.scenarios.job.test_interlocks_execution.TestInterlocksExecution#test_complete_job_for_process_having_interlocks_with_date_property_and_task_start_trigger", "labels": [{"name": "tag", "value": "complete_job_for_process_having_interlocks_with_date_property_and_task_start_trigger"}, {"name": "tag", "value": "interlocks"}, {"name": "tag", "value": "job"}, {"name": "tag", "value": "scenario"}, {"name": "parentSuite", "value": "tests.scenarios.job"}, {"name": "suite", "value": "test_interlocks_execution"}, {"name": "subSuite", "value": "TestInterlocksExecution"}, {"name": "host", "value": "ubuntu"}, {"name": "thread", "value": "29333-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.scenarios.job.test_interlocks_execution"}], "links": [{"type": "link", "url": "https://app.clickup.com/t/86cur1x7t", "name": "https://app.clickup.com/t/86cur1x7t"}]}