{"name": "Test to verify that the Set relation Task Actions works as expected during execution", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_task_automation_actions.TestTaskAutomationActions object at 0x7af821f95820>, user_group_creation = 'Auto_Test_user_group_TestTaskAutomationActions_1457', job_execution_by = 'user_group', users_list = []\n\n    @allure.title(\"Test to verify that the Set relation Task Actions works as expected during \"\n                  \"execution\")\n    @allure.description(\"This testcase tests if Set relation task actions for one to many cardinality added on task \"\n                        \"gets triggered at completion of the task during job execution\")\n    @allure.link(\"https://app.clickup.com/t/86cupye5x\")\n    @pytest.mark.scenario\n    @pytest.mark.job\n    @pytest.mark.set_relation_task_action_for_one_to_many_cardinality_triggered_at_completion_of_task\n    @pytest.mark.parametrize(\"job_execution_by, users_list\", [(\"user\", [Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\")]),\n                                                              (\"user_group\", [])])\n    def test_set_relation_task_action_for_one_to_many_cardinality_triggered_at_completion_of_task(self,\n                                                                                                  user_group_creation,\n                                                                                                  job_execution_by,\n                                                                                                  users_list):\n        process_data = self.process_obj.test_add_set_relation_action_type_with_one_to_many_cardinality_at_completion_of_task()\n        object_data_02, display_name = object_type_objects.test_create_objects(\n            {process_data[\"properties_02\"][\"title_display_name\"]: \"object-02\",\n             process_data[\"properties_02\"][\"single_line_property\"]: \"single_line\",\n             process_data[\"properties_02\"][\"multi_line_property\"]: \"multi_line\",\n             process_data[\"properties_02\"][\"number_property\"]: \"02\",\n             process_data[\"properties_02\"][\"multi_select_property\"]: [\n                 process_data[\"properties_02\"][\"multi_select_option\"]],\n             process_data[\"properties_02\"][\"single_select_property\"]: process_data[\"properties_02\"][\n                 \"single_select_option\"],\n             process_data[\"properties_02\"][\"date_property\"]: \"12-12-2012\",\n             process_data[\"properties_02\"][\"date_time_property\"]: datetime.now().strftime(\"%d-%m-%Y %H:%M\")},\n            process_data[\"properties_02\"][\"display_name\"])\n    \n>       object_data_01, display_name = object_type_objects.test_create_objects(\n            {process_data[\"properties_01\"][\"title_display_name\"]: \"object_01\",\n             process_data[\"properties_01\"][\"single_line_property\"]: \"single_line\",\n             process_data[\"properties_01\"][\"multi_line_property\"]: \"multi_line\",\n             process_data[\"properties_01\"][\"number_property\"]: \"01\",\n             process_data[\"properties_01\"][\"multi_select_property\"]: [\n                 process_data[\"properties_01\"][\"multi_select_option\"]],\n             process_data[\"properties_01\"][\"single_select_property\"]: process_data[\"properties_01\"][\n                 \"single_select_option\"],\n             process_data[\"properties_01\"][\"date_property\"]: \"12-12-2012\",\n             process_data[\"properties_01\"][\"date_time_property\"]: datetime.now().strftime(\"%d-%m-%Y %H:%M\"),\n             process_data[\"relation_name\"]: object_data_02[\"displayName\"]},\n            process_data[\"properties_01\"][\"display_name\"], False)\n\ntests/scenarios/job/test_task_automation_actions.py:2272: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/scenarios/ontology/test_object.py:39: in test_create_objects\n    response = create_objects(display_name, objects_inputs, random_data, reason)\ntests/unit/ontology/objects.py:158: in create_objects\n    if not status_200(response):\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, message = ''\n\n    def status_200(response, message=None):\n        if message is None:\n            message = response.text\n>       assert response.status_code == 200, message\nE       AssertionError\n\nutil/validate_response.py:4: AssertionError"}, "description": "This testcase tests if Set relation task actions for one to many cardinality added on task gets triggered at completion of the task during job execution", "parameters": [{"name": "job_execution_by", "value": "'user_group'"}, {"name": "users_list", "value": "[]"}], "start": 1733504102431, "stop": 1733504121946, "uuid": "8b063c58-cdaa-4c9f-bdce-5cc2851715d6", "historyId": "a94cebd76321b1e0c0355554d3496d51", "testCaseId": "ddf8014c68ba81757a4b5975254ebe5f", "fullName": "tests.scenarios.job.test_task_automation_actions.TestTaskAutomationActions#test_set_relation_task_action_for_one_to_many_cardinality_triggered_at_completion_of_task", "labels": [{"name": "tag", "value": "set_relation_task_action_for_one_to_many_cardinality_triggered_at_completion_of_task"}, {"name": "tag", "value": "job"}, {"name": "tag", "value": "scenario"}, {"name": "parentSuite", "value": "tests.scenarios.job"}, {"name": "suite", "value": "test_task_automation_actions"}, {"name": "subSuite", "value": "TestTaskAutomationActions"}, {"name": "host", "value": "ubuntu"}, {"name": "thread", "value": "29333-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.scenarios.job.test_task_automation_actions"}], "links": [{"type": "link", "url": "https://app.clickup.com/t/86cupye5x", "name": "https://app.clickup.com/t/86cupye5x"}]}