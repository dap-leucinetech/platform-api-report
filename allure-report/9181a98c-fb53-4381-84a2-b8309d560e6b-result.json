{"name": "This test case is to create assets logs for object type with filters", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "@allure.title(\"This test case is to create assets logs for object type with filters\")\n    @allure.description(\"This test case is to create assets logs for object type with filters\")\n    @allure.link(\"https://app.clickup.com/t/86cwayeyv\")\n    @pytest.mark.scenario\n    @pytest.mark.ontology\n    @pytest.mark.assets_logs_with_filters\n    def test_create_assets_logs_assets_logs_with_filters():\n        display_name = object_types()\n        login(Env.get_env_data(\"QA_ADMIN_USERNAME_01\"), Env.get_env_data(\"QA_ADMIN_PASSWORD_01\"))\n        select_facility(const.FACILITY_NAME)\n        select_usecase(const.USECASE_NAME)\n        get_assets_logs(display_name)\n        process_properties = [AssertLogsType.ANNOTATION_REMARK, AssertLogsType.ANNOTATION_MEDIA]\n        date_value = datetime.now().strftime(\"%Y-%m-%d\")\n        date_value = int(time.mktime(datetime.strptime(date_value, \"%Y-%m-%d\").timetuple()))\n        filters = {\"key\": \"startedAt\", \"constraint\": \"LTE\", \"value\": date_value}\n>       create_assets_logs(display_name, label=\"assets_logs\", process_properties=process_properties,\n                           resource_properties=display_name, filters=filters)\n\ntests/scenarios/ontology/test_object.py:768: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/unit/ontology/objects.py:567: in create_assets_logs\n    status_200(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, message = ''\n\n    def status_200(response, message=None):\n        if message is None:\n            message = response.text\n>       assert response.status_code == 200, message\nE       AssertionError\n\nutil/validate_response.py:4: AssertionError"}, "description": "This test case is to create assets logs for object type with filters", "start": 1733505236322, "stop": 1733505237538, "uuid": "254e766d-efe1-4397-a1c2-189b2bedd9ce", "historyId": "12eb8cfa0c99e780772d113ee0adef82", "testCaseId": "efe4343f9f1c52a358fcf17a9aae4d97", "fullName": "tests.scenarios.ontology.test_object#test_create_assets_logs_assets_logs_with_filters", "labels": [{"name": "tag", "value": "assets_logs_with_filters"}, {"name": "tag", "value": "ontology"}, {"name": "tag", "value": "scenario"}, {"name": "parentSuite", "value": "tests.scenarios.ontology"}, {"name": "suite", "value": "test_object"}, {"name": "host", "value": "ubuntu"}, {"name": "thread", "value": "29333-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.scenarios.ontology.test_object"}], "links": [{"type": "link", "url": "https://app.clickup.com/t/86cwayeyv", "name": "https://app.clickup.com/t/86cwayeyv"}]}