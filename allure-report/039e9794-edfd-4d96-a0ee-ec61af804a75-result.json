{"name": "Test to verify that user can configure number parameter with criteria type validation, in between condition,enabled approval flow and parameterized value", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_number_parameter_exception_management.TestNumberParameterExceptionManagement object at 0x7af82273e150>\n\n    @allure.title(\n        \"Test to verify that user can configure number parameter with criteria type validation, in between condition,\"\n        \"enabled approval flow and parameterized value\")\n    @allure.description(\n        \"This testcase tests adding number parameter with criteria type validation, in between condition, \"\n        \"enabled approval flow and parameterized value\")\n    @allure.link(\"https://app.clickup.com/t/86cvmvt3v\")\n    @pytest.mark.scenario\n    @pytest.mark.create_prototype\n    @pytest.mark.exception_management_workflow\n    @pytest.mark.add_number_parameter_with_criteria_type_validation_in_between_condition_enabled_approval_flow_and_parameterized_value\n    def test_add_number_parameter_with_criteria_type_validation_in_between_condition_enabled_approval_flow_and_parameterized_value(\n            self):\n        checklist_name_01 = self.test_add_number_parameter_with_criteria_type_validation_in_between_condition_enabled_approval_flow_and_parameterized_value.__name__\n        login(Env.get_env_data(\"QA_ADMIN_USERNAME_01\"), Env.get_env_data(\"QA_ADMIN_PASSWORD_01\"))\n        select_facility(const.FACILITY_NAME)\n        select_usecase(const.USECASE_NAME)\n    \n        create_new_checklist(checklist_name_01, const.USECASE_ID, const.FACILITY_ID)\n        add_stage(stage_name_01)\n        add_task(stage_name_01, task_name_01)\n        defined_error = \"Error - validation failed for criteria type validation\"\n    \n        number_param_01 = get_parameter_data(\"number\")\n        add_number_parameter(stage_name_01, task_name_01, number_param_01)\n    \n        number_param_02 = get_parameter_data(\"number\")\n        add_number_parameter(stage_name_01, task_name_01, number_param_02)\n    \n        number_param = get_parameter_data(\"number\")\n        add_number_parameter(stage_name_01, task_name_01, number_param,\n                             validations=[\n                                 {\"Validation_type\": \"criteria\", \"criteria\": \"parameter\", \"operator\": \"-\",\n                                  \"error\": defined_error, \"lower_value\": number_param_01[\"label\"],\n                                  \"upper_value\": number_param_02[\"label\"]}],\n                             enable_exception_approval=\"APPROVER_REVIEWER_FLOW\")\n>       validate_checklist()\n\ntests/scenarios/test_number_parameter_exception_management.py:629: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/unit/prototyping/process.py:186: in validate_checklist\n    status_200(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, message = ''\n\n    def status_200(response, message=None):\n        if message is None:\n            message = response.text\n>       assert response.status_code == 200, message\nE       AssertionError\n\nutil/validate_response.py:4: AssertionError"}, "description": "This testcase tests adding number parameter with criteria type validation, in between condition, enabled approval flow and parameterized value", "start": 1733492232965, "stop": 1733492234998, "uuid": "0f281802-2adb-4fd8-a515-fa08f8612c13", "historyId": "345ecb16bc99dc0dce9d98450355e677", "testCaseId": "9f79a6bdb2b421605eced9280dbbdf1c", "fullName": "tests.scenarios.test_number_parameter_exception_management.TestNumberParameterExceptionManagement#test_add_number_parameter_with_criteria_type_validation_in_between_condition_enabled_approval_flow_and_parameterized_value", "labels": [{"name": "tag", "value": "add_number_parameter_with_criteria_type_validation_in_between_condition_enabled_approval_flow_and_parameterized_value"}, {"name": "tag", "value": "exception_management_workflow"}, {"name": "tag", "value": "create_prototype"}, {"name": "tag", "value": "scenario"}, {"name": "parentSuite", "value": "tests.scenarios"}, {"name": "suite", "value": "test_number_parameter_exception_management"}, {"name": "subSuite", "value": "TestNumberParameterExceptionManagement"}, {"name": "host", "value": "ubuntu"}, {"name": "thread", "value": "29333-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.scenarios.test_number_parameter_exception_management"}], "links": [{"type": "link", "url": "https://app.clickup.com/t/86cvmvt3v", "name": "https://app.clickup.com/t/86cvmvt3v"}]}