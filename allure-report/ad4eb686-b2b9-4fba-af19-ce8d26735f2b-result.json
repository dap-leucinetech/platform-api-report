{"name": "Test to repeat the task which is completed with exception", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_repeat_task.TestRepeatTask object at 0x7af8222555e0>, user_group_creation = 'Auto_Test_user_group_TestRepeatTask_779', job_execution_by = 'user', users_list = ['process.publisher.03']\n\n    @allure.title(\"Test to repeat the task which is completed with exception\")\n    @allure.description(\"This test case verify that if user can repeat task which is completed with exception\")\n    @allure.link(\"https://app.clickup.com/t/86cvw0xdfs\")\n    @pytest.mark.scenario\n    @pytest.mark.job\n    @pytest.mark.repeat_task\n    @pytest.mark.repeat_task_completed_with_exception\n    @pytest.mark.parametrize(\"job_execution_by, users_list\", [(\"user\", [Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\")]),\n                                                              (\"user_group\", [])])\n    def test_repeat_task_completed_with_exception(self, user_group_creation, job_execution_by, users_list):\n        process_data = self.process_obj.test_add_new_stage_and_task()\n        login(Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\"), Env.get_env_data(\"QA_PUBLISHER_PASSWORD_01\"))\n        select_facility(const.FACILITY_NAME)\n        select_usecase(const.USECASE_NAME)\n        self.job_obj.assign_user_and_user_group_to_process(job_execution_by, users_list, user_group_creation,\n                                                           all_task_assignmnet=True)\n        self.job_obj.create_job()\n        self.job_obj.start_job()\n        self.job_obj.complete_task(task_name_01, ctwe=True, ctwe_reason=\"Completed with exception\")\n        self.job_obj.repeat_task(task_name_01)\n        self.job_obj.start_task(task_name_01, order_tree=1)\n        self.job_obj.execute_parameter(task_name_01, process_data[\"single_select_param\"], data={\"value\": \"monday\"})\n>       self.job_obj.complete_task(task_name_01, order_tree=1)\n\ntests/scenarios/job/test_repeat_task.py:196: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/unit/execution/jobs.py:679: in complete_task\n    status_200(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, message = ''\n\n    def status_200(response, message=None):\n        if message is None:\n            message = response.text\n>       assert response.status_code == 200, message\nE       AssertionError\n\nutil/validate_response.py:4: AssertionError"}, "description": "This test case verify that if user can repeat task which is completed with exception", "parameters": [{"name": "job_execution_by", "value": "'user'"}, {"name": "users_list", "value": "['process.publisher.03']"}], "start": 1733501387127, "stop": 1733501398422, "uuid": "c7bbe413-1d5e-4645-9147-622519295bea", "historyId": "ce04dcf87530c41d19dde47e082ae8f6", "testCaseId": "8de175a265f16626910898844c9e3769", "fullName": "tests.scenarios.job.test_repeat_task.TestRepeatTask#test_repeat_task_completed_with_exception", "labels": [{"name": "tag", "value": "repeat_task_completed_with_exception"}, {"name": "tag", "value": "repeat_task"}, {"name": "tag", "value": "job"}, {"name": "tag", "value": "scenario"}, {"name": "parentSuite", "value": "tests.scenarios.job"}, {"name": "suite", "value": "test_repeat_task"}, {"name": "subSuite", "value": "TestRepeatTask"}, {"name": "host", "value": "ubuntu"}, {"name": "thread", "value": "29333-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.scenarios.job.test_repeat_task"}], "links": [{"type": "link", "url": "https://app.clickup.com/t/86cvw0xdfs", "name": "https://app.clickup.com/t/86cvw0xdfs"}]}