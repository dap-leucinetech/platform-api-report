{"name": "Test to verify that user can initiate the exception approval workflow for number parameter with resource type validation and view the exception from the reviewer side from the banner on the job", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_resource_parameter_exception_management_execution.TestResourceParameterExceptionManagementExecution object at 0x7af822093800>\nuser_group_creation = 'Auto_Test_user_group_TestResourceParameterExceptionManagementExecution_1836', job_execution_by = 'user_group', users_list = []\n\n    @allure.title(\n        \"Test to verify that user can initiate the exception approval workflow for number parameter with resource \"\n        \"type validation and view the exception from the reviewer side from the banner on the job\")\n    @allure.description(\n        \"This test case validates that user can initiate the exception approval workflow for number parameter with \"\n        \"resource type validation and view the exception from the reviewer side from the banner on the job\")\n    @allure.link(\"https://app.clickup.com/t/86cw1d35c\")\n    @pytest.mark.scenario\n    @pytest.mark.job\n    @pytest.mark.exception_management_workflow\n    @pytest.mark.exception_approval_workflow_on_resource_type_validation_and_view_exception_from_reviewer_side_on_banner\n    @pytest.mark.parametrize(\"job_execution_by, users_list\", [\n        (\"user\", [Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\"), Env.get_env_data(\"QA_PUBLISHER_USERNAME_02\")]),\n        (\"user_group\", [])])\n    def test_exception_approval_workflow_on_resource_type_validation_and_view_exception_from_reviewer_side_on_banner(\n            self,\n            user_group_creation,\n            job_execution_by,\n            users_list):\n>       process_data = self.process_obj.test_add_number_parameter_with_resource_type_validation_enabled_approval_flow_exception_workflow()\n\ntests/scenarios/job/test_resource_parameter_exception_management_execution.py:674: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/scenarios/test_number_parameter_exception_management.py:145: in test_add_number_parameter_with_resource_type_validation_enabled_approval_flow_exception_workflow\n    validate_checklist()\ntests/unit/prototyping/process.py:186: in validate_checklist\n    status_200(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, message = ''\n\n    def status_200(response, message=None):\n        if message is None:\n            message = response.text\n>       assert response.status_code == 200, message\nE       AssertionError\n\nutil/validate_response.py:4: AssertionError"}, "description": "This test case validates that user can initiate the exception approval workflow for number parameter with resource type validation and view the exception from the reviewer side from the banner on the job", "parameters": [{"name": "job_execution_by", "value": "'user_group'"}, {"name": "users_list", "value": "[]"}], "start": 1733501763494, "stop": 1733501770142, "uuid": "076445b5-9076-4ff6-a039-b7a172ac4bc2", "historyId": "68f48da6473c0948181507d8bba1d82c", "testCaseId": "b3bdf2739b2c4709f7a16474de696601", "fullName": "tests.scenarios.job.test_resource_parameter_exception_management_execution.TestResourceParameterExceptionManagementExecution#test_exception_approval_workflow_on_resource_type_validation_and_view_exception_from_reviewer_side_on_banner", "labels": [{"name": "tag", "value": "exception_approval_workflow_on_resource_type_validation_and_view_exception_from_reviewer_side_on_banner"}, {"name": "tag", "value": "exception_management_workflow"}, {"name": "tag", "value": "job"}, {"name": "tag", "value": "scenario"}, {"name": "parentSuite", "value": "tests.scenarios.job"}, {"name": "suite", "value": "test_resource_parameter_exception_management_execution"}, {"name": "subSuite", "value": "TestResourceParameterExceptionManagementExecution"}, {"name": "host", "value": "ubuntu"}, {"name": "thread", "value": "29333-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.scenarios.job.test_resource_parameter_exception_management_execution"}], "links": [{"type": "link", "url": "https://app.clickup.com/t/86cw1d35c", "name": "https://app.clickup.com/t/86cw1d35c"}]}